Assignment release




Introduction to Servers
- https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Client-server-model.svg/1200px-Client-server-model.svg.png
- https://madooei.github.io/cs421_sp20_homepage/assets/client-server-1.png
- https://picswovo.wovo.org/what_is_a_server_and_examples.png

PORTs -> that are requests
- physical PORTs
- virtual PORTs

Introduction to APIs

Introduction to APIs
- Application Programming Interface (API)
- Endpoints
- Server Room (Melbourne) port 80 -> /melbourne { "username": "akash", "password": "password" }
- bank server (Adelaide) port 443 -> /bank/debit <- { "account_number": 1234, "amount": 10_000_000 }

API eg:
- https://cdn.jsdelivr.net/gh/fawazahmed0/currency-api@1/latest/currencies/aud.json
- https://icanhazdadjoke.com/

Types of APIs
- RESTful -> HTTP method <-> server and clients
- GraphQL
- Socket


What are Http Methods or Verb
- Set of rules
- Response and Request
- CRUD <-> patch and put (update)

- name, age, interest
- akash, 43, cricket

{ "age": 45 } <- Patch

Status codes
- 2xx, 3xx, 4xx, 5xx
Examples:
- 5xx -> 503
- 4xx -> 404
- 2xx -> 200, 201

Different types of frameworks
- Rails <-> 5 endpoints
- Django
- FastAPI
- Express <-> Node (expressjs)
- Flask

Introduction to Flask
- WSGI <-> Web Server Gateway Interface
- what you want is what you get