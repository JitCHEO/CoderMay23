
- Objects -> real world like entity
    - non object oriented 
        approach for car example
        a student with attributes like name, age, and major
- Classes -> blueprint of the object


- function(function helper) vs methods(function associates with a class)
    - Marcus Low question below:
    - So functions within classes dont need arguments because they are intrinsically linked to an object already?
     Where as with functions normally we have to pass arguments for the function to work.
     - George: say not always need arguments, can be just print("Hello World")



- Object oriented programming
    - any information shared, used, manipulate and creaetee will be contained in object
    - cons for smaller project, its overloaded
    - pros for larger project, its advantageous

- Features
    - information will be contained in an object
    - attributes object -> red color ferrari, fastest car speed of mclaren
    - method -> share or change the attribbute value
    - to contain constructor -> 
            def __init__():
                pass

    - inheritance(just information on this, not part of the course)
        - dog, cat, snake (classified as animals)
        - Animal
        - Snake share some attirbutes from animal as snakes might have venomous compare to dog & cat

        - Animal(eyes=2, skin="fur or scales", legs=4, breed="dog or cat")
         dog = Animal(2, "fur", 4, "dog")
         cat = Animal(2, "fur", 4, "cat")
         snake = Animal(2, "scales", None, "snake")

         Snake(Animal)
         cobra = Snake(2, "scales", None, "snake", "true")

    - Encapsulation 


- Challenge presented 


Objects
Car -> 4 tyres, steering, wheel, it runs with a petrol
